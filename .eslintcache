[{"G:\\mern\\frontend\\shopit\\src\\index.js":"1","G:\\mern\\frontend\\shopit\\src\\App.js":"2","G:\\mern\\frontend\\shopit\\src\\components\\layouts\\Header.js":"3","G:\\mern\\frontend\\shopit\\src\\components\\layouts\\Footer.js":"4","G:\\mern\\frontend\\shopit\\src\\components\\Home.js":"5","G:\\mern\\frontend\\shopit\\src\\components\\layouts\\Metadata.js":"6","G:\\mern\\frontend\\shopit\\src\\store.js":"7","G:\\mern\\frontend\\shopit\\src\\reducers\\productReducer.js":"8","G:\\mern\\frontend\\shopit\\src\\constants\\productConstants.js":"9","G:\\mern\\frontend\\shopit\\src\\actions\\productActions.js":"10","G:\\mern\\frontend\\shopit\\src\\components\\products\\Products.js":"11","G:\\mern\\frontend\\shopit\\src\\components\\layouts\\Loader.js":"12","G:\\mern\\frontend\\shopit\\src\\components\\products\\ProductDetails.js":"13","G:\\mern\\frontend\\shopit\\src\\components\\layouts\\Search.js":"14","G:\\mern\\frontend\\shopit\\src\\reducers\\userReducers.js":"15","G:\\mern\\frontend\\shopit\\src\\constants\\userConstants.js":"16","G:\\mern\\frontend\\shopit\\src\\components\\user\\login.js":"17","G:\\mern\\frontend\\shopit\\src\\components\\user\\Login.js":"18","G:\\mern\\frontend\\shopit\\src\\actions\\userActions.js":"19","G:\\mern\\frontend\\shopit\\src\\components\\user\\Register.js":"20","G:\\mern\\frontend\\shopit\\src\\components\\user\\Profile.js":"21","G:\\mern\\frontend\\shopit\\src\\components\\route\\ProtectedRoute.js":"22","G:\\mern\\frontend\\shopit\\src\\components\\user\\UpdateProfile.js":"23","G:\\mern\\frontend\\shopit\\src\\components\\user\\UpdatePassword.js":"24","G:\\mern\\frontend\\shopit\\src\\components\\user\\ForgotPassword.js":"25","G:\\mern\\frontend\\shopit\\src\\components\\user\\NewPassword.js":"26","G:\\mern\\frontend\\shopit\\src\\reducers\\cartReducers.js":"27","G:\\mern\\frontend\\shopit\\src\\constants\\cartConstants.js":"28","G:\\mern\\frontend\\shopit\\src\\actions\\cartActions.js":"29","G:\\mern\\frontend\\shopit\\src\\components\\cart\\Cart.js":"30","G:\\mern\\frontend\\shopit\\src\\components\\cart\\Shipping.js":"31","G:\\mern\\frontend\\shopit\\src\\components\\cart\\CheckoutSteps.js":"32","G:\\mern\\frontend\\shopit\\src\\components\\cart\\ConfirmOrder.js":"33","G:\\mern\\frontend\\shopit\\src\\components\\cart\\Payment.js":"34","G:\\mern\\frontend\\shopit\\src\\reducers\\orderReducers.js":"35","G:\\mern\\frontend\\shopit\\src\\constants\\orderConstants.js":"36","G:\\mern\\frontend\\shopit\\src\\actions\\orderActions.js":"37","G:\\mern\\frontend\\shopit\\src\\components\\cart\\OrderSuccess.js":"38","G:\\mern\\frontend\\shopit\\src\\components\\order\\ListOrders.js":"39","G:\\mern\\frontend\\shopit\\src\\components\\order\\OrderDetails.js":"40","G:\\mern\\frontend\\shopit\\src\\components\\review\\ListReviews.js":"41","G:\\mern\\frontend\\shopit\\src\\components\\admin\\Dashboard.js":"42","G:\\mern\\frontend\\shopit\\src\\components\\admin\\Sidebar.js":"43","G:\\mern\\frontend\\shopit\\src\\components\\admin\\ProductsList.js":"44","G:\\mern\\frontend\\shopit\\src\\components\\admin\\NewProduct.js":"45","G:\\mern\\frontend\\shopit\\src\\components\\admin\\UpdateProduct.js":"46","G:\\mern\\frontend\\shopit\\src\\components\\admin\\OrderList.js":"47","G:\\mern\\frontend\\shopit\\src\\components\\admin\\ProcessOrder.js":"48","G:\\mern\\frontend\\shopit\\src\\components\\admin\\UserList.js":"49","G:\\mern\\frontend\\shopit\\src\\components\\admin\\UpdateUser.js":"50","G:\\mern\\frontend\\shopit\\src\\components\\admin\\ProductReviews.js":"51"},{"size":581,"mtime":1610604582364,"results":"52","hashOfConfig":"53"},{"size":4699,"mtime":1611242986562,"results":"54","hashOfConfig":"53"},{"size":2955,"mtime":1610732149420,"results":"55","hashOfConfig":"53"},{"size":335,"mtime":1610343772685,"results":"56","hashOfConfig":"53"},{"size":8302,"mtime":1611238145639,"results":"57","hashOfConfig":"53"},{"size":255,"mtime":1610344822377,"results":"58","hashOfConfig":"53"},{"size":1743,"mtime":1611076129446,"results":"59","hashOfConfig":"53"},{"size":7271,"mtime":1611164393546,"results":"60","hashOfConfig":"53"},{"size":1946,"mtime":1611074209989,"results":"61","hashOfConfig":"53"},{"size":6177,"mtime":1611239502312,"results":"62","hashOfConfig":"53"},{"size":1741,"mtime":1611238608383,"results":"63","hashOfConfig":"53"},{"size":169,"mtime":1610604085450,"results":"64","hashOfConfig":"53"},{"size":9080,"mtime":1611034100877,"results":"65","hashOfConfig":"53"},{"size":950,"mtime":1610616589790,"results":"66","hashOfConfig":"53"},{"size":6923,"mtime":1610784360618,"results":"67","hashOfConfig":"53"},{"size":2262,"mtime":1610784116979,"results":"68","hashOfConfig":"53"},{"size":2512,"mtime":1610725258401,"results":"69","hashOfConfig":"53"},{"size":2632,"mtime":1610977859216,"results":"70","hashOfConfig":"53"},{"size":7597,"mtime":1610791070239,"results":"71","hashOfConfig":"53"},{"size":4532,"mtime":1610729172910,"results":"72","hashOfConfig":"53"},{"size":2148,"mtime":1610732863040,"results":"73","hashOfConfig":"53"},{"size":949,"mtime":1610733826282,"results":"74","hashOfConfig":"53"},{"size":5259,"mtime":1610785842518,"results":"75","hashOfConfig":"53"},{"size":3009,"mtime":1610787092425,"results":"76","hashOfConfig":"53"},{"size":2270,"mtime":1610791408901,"results":"77","hashOfConfig":"53"},{"size":3011,"mtime":1610791853323,"results":"78","hashOfConfig":"53"},{"size":1147,"mtime":1610807671270,"results":"79","hashOfConfig":"53"},{"size":148,"mtime":1610794133768,"results":"80","hashOfConfig":"53"},{"size":1137,"mtime":1610808146056,"results":"81","hashOfConfig":"53"},{"size":4767,"mtime":1610808686168,"results":"82","hashOfConfig":"53"},{"size":4885,"mtime":1610811790408,"results":"83","hashOfConfig":"53"},{"size":1884,"mtime":1610811726245,"results":"84","hashOfConfig":"53"},{"size":3837,"mtime":1610812044431,"results":"85","hashOfConfig":"53"},{"size":5678,"mtime":1610956146289,"results":"86","hashOfConfig":"53"},{"size":4574,"mtime":1610955697284,"results":"87","hashOfConfig":"53"},{"size":1186,"mtime":1610955659834,"results":"88","hashOfConfig":"53"},{"size":3890,"mtime":1610977768041,"results":"89","hashOfConfig":"53"},{"size":757,"mtime":1610958924428,"results":"90","hashOfConfig":"53"},{"size":2834,"mtime":1611031775287,"results":"91","hashOfConfig":"53"},{"size":3864,"mtime":1610973524405,"results":"92","hashOfConfig":"53"},{"size":735,"mtime":1611034133371,"results":"93","hashOfConfig":"53"},{"size":5899,"mtime":1611237640779,"results":"94","hashOfConfig":"53"},{"size":1681,"mtime":1611073900775,"results":"95","hashOfConfig":"53"},{"size":3918,"mtime":1611076234712,"results":"96","hashOfConfig":"53"},{"size":8421,"mtime":1611163852984,"results":"97","hashOfConfig":"53"},{"size":9506,"mtime":1611164643567,"results":"98","hashOfConfig":"53"},{"size":3955,"mtime":1611237461212,"results":"99","hashOfConfig":"53"},{"size":6433,"mtime":1611237806076,"results":"100","hashOfConfig":"53"},{"size":3670,"mtime":1611238953578,"results":"101","hashOfConfig":"53"},{"size":4717,"mtime":1611239166527,"results":"102","hashOfConfig":"53"},{"size":5227,"mtime":1611239396142,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1l4ab7",{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"106"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"106"},"G:\\mern\\frontend\\shopit\\src\\index.js",[],["219","220"],"G:\\mern\\frontend\\shopit\\src\\App.js",["221","222","223","224","225"],"\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from 'axios';\nimport { useEffect,useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { loadUser } from './actions/userActions';\nimport './App.css';\nimport Dashboard from './components/admin/Dashboard';\nimport NewProduct from './components/admin/NewProduct';\nimport OrdersList from './components/admin/OrderList';\nimport ProcessOrder from './components/admin/ProcessOrder';\nimport ProductReviews from './components/admin/ProductReviews';\nimport ProductsList from './components/admin/ProductsList';\nimport UpdateProduct from './components/admin/UpdateProduct';\nimport UpdateUser from './components/admin/UpdateUser';\nimport UsersList from './components/admin/UserList';\nimport Cart from './components/cart/Cart';\nimport CheckoutSteps from './components/cart/CheckoutSteps';\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport OrderSuccess from './components/cart/OrderSuccess';\nimport Payment from './components/cart/Payment';\nimport Shipping from './components/cart/Shipping';\nimport Home from './components/Home';\nimport Footer from './components/layouts/Footer';\nimport Header from './components/layouts/Header';\nimport ListOrders from './components/order/ListOrders';\nimport OrderDetails from './components/order/OrderDetails';\nimport ProductDetails from './components/products/ProductDetails';\nimport ProtectedRoute from './components/route/ProtectedRoute';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport Login from './components/user/Login';\nimport NewPassword from './components/user/NewPassword';\nimport Profile from './components/user/Profile';\nimport Register from './components/user/Register';\nimport UpdatePassword from './components/user/UpdatePassword';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport store from './store'\n\n\n\n\nfunction App() {\n\n  const [stripeApiKey, setStripeApiKey] = useState('')\n\n  const {user,loading,isAuthenticated}=useSelector(state=>state.auth)\n\n\n  useEffect(()=>{\n    store.dispatch(loadUser())\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('/api/v1/stripeapi');\n\n      setStripeApiKey(data.stripeApiKey)\n    }\n\n    console.log('key',stripeApiKey);\n\n    getStripApiKey();\n\n\n  },[])\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <Header/>\n      <div class=\"container continer-fluid\">\n        \n      \n      <Route path=\"/\" component={Home} exact/>\n      <Route path=\"/search/:keyword\" component={Home} />\n      <Route path=\"/product/:id\" component={ProductDetails} exact/>\n      <Route path=\"/login\" component={Login} exact/>\n      <Route path=\"/register\" component={Register} exact/>\n      <ProtectedRoute path=\"/me\" component={Profile} exact/>\n      <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact/>\n      <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact/>\n      <ProtectedRoute path=\"/shipping\" component={Shipping} exact/>\n      <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact/>\n      <ProtectedRoute path=\"/success\" component={OrderSuccess} exact/>\n      <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact/>\n      <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact/>\n\n\n      {stripeApiKey &&\n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRoute path=\"/payment\" component={Payment} />\n            </Elements> \n          }\n      <Route path=\"/password/forgot\" component={ForgotPassword} exact/>\n      <Route path=\"/password/reset/:token\" component={NewPassword} exact/>\n      <Route path=\"/cart\" component={Cart} exact/>\n      \n      </div>\n      <ProtectedRoute isAdmin={true}  path=\"/dashboard\" component={Dashboard} exact/>\n      <ProtectedRoute isAdmin={true} path=\"/admin/products\" component={ProductsList} exact/>\n      <ProtectedRoute isAdmin={true} path=\"/admin/product\" component={NewProduct} exact/>\n      <ProtectedRoute isAdmin={true} path=\"/admin/product/:id\" component={UpdateProduct} exact/>\n      <ProtectedRoute isAdmin={true} path=\"/admin/orders\" component={OrdersList} exact/>\n      <ProtectedRoute isAdmin={true} path=\"/admin/order/:id\" component={ProcessOrder} exact/>\n      <ProtectedRoute isAdmin={true} path=\"/admin/users\" component={UsersList} exact/>\n      <ProtectedRoute isAdmin={true} path=\"/admin/user/:id\" component={UpdateUser} exact/>\n      <ProtectedRoute isAdmin={true} path=\"/admin/reviews\" component={ProductReviews} exact/>\n   \n    <Footer/>\n   \n\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","G:\\mern\\frontend\\shopit\\src\\components\\layouts\\Header.js",["226"],"import React, { Fragment } from 'react'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport Search from './Search'\r\nimport {logout} from '../../actions/userActions'\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const alert=useAlert()\r\n  const dispatch=useDispatch()\r\n\r\n  const {user,loading}=useSelector(state=>state.auth)\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    alert.success('Logged out successfully.')\r\n}\r\n\r\n    return (\r\n        <Fragment>\r\n             <nav className=\"navbar row\">\r\n      <div className=\"col-12 col-md-3\">\r\n        <div className=\"navbar-brand\">\r\n          <Link to=\"/\">          <img src=\"./images/shopit_logo.png\" /></Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n        <Route render={({history})=> <Search history={history}/>} />\r\n        \r\n      </div>\r\n    \r\n      <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n        <Link to=\"/cart\" style={{textDecoration:'none'}}>\r\n      <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n        <span className=\"ml-1\" id=\"cart_count\">2</span></Link> \r\n\r\n        {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header","G:\\mern\\frontend\\shopit\\src\\components\\layouts\\Footer.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\Home.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\layouts\\Metadata.js",[],"G:\\mern\\frontend\\shopit\\src\\store.js",["227"],"import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\n\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducer'\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: productDetailsReducer,\r\n    newProduct: newProductReducer,\r\n    product: productReducer,\r\n    productReviews: productReviewsReducer,\r\n    review: reviewReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer\r\n})\r\n\r\n\r\nlet initialState={\r\n    cart:{\r\n        cartItems:localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems'))\r\n        :[],\r\n        shippingInfo:localStorage.getItem('shippingInfo')?JSON.parse(localStorage.getItem('shippingInfo'))\r\n        :{}\r\n    }\r\n}\r\n\r\nconst middleware=[thunk]\r\n\r\nconst store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store;","G:\\mern\\frontend\\shopit\\src\\reducers\\productReducer.js",[],"G:\\mern\\frontend\\shopit\\src\\constants\\productConstants.js",[],"G:\\mern\\frontend\\shopit\\src\\actions\\productActions.js",["228","229"],"\r\nimport axios from \"axios\";\r\nimport { types } from \"react-alert\";\r\n\r\nimport {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/productConstants'\r\n\r\n export const getProducts=(keyword='',currentPage=1,price,category,rating)=>async(dispatch)=>{\r\n     try{\r\n\r\n        dispatch({\r\n            type:ALL_PRODUCTS_REQUEST\r\n        })\r\n\r\n        let link=`/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\r\n    \r\n        if(category){ \r\n\r\n\r\n             link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\r\n\r\n\r\n        }\r\n\r\n        const {data}=await axios.get(link)\r\n  \r\n        \r\n\r\n        \r\n\r\n        dispatch({\r\n            type:ALL_PRODUCTS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n     }\r\n     catch(error){\r\n         dispatch({\r\n         type:ALL_PRODUCTS_FAIL,\r\n         payload: error.response.data.message\r\n\r\n\r\n     })\r\n    }\r\n }\r\n export const newProduct = (productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/product/new`, productData, config)\r\n        console.log(data);\r\n\r\n        dispatch({\r\n            type: NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n export const getProductDetails=(id)=>async(dispatch)=>{\r\n    try{\r\n\r\n       dispatch({\r\n           type:PRODUCT_DETAILS_REQUEST\r\n       })\r\n\r\n       const {data}=await axios.get(`/api/v1/product/${id}`)\r\n\r\n       dispatch({\r\n           type:PRODUCT_DETAILS_SUCCESS,\r\n           payload:data.product\r\n       })\r\n\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n        type:PRODUCT_DETAILS_FAIL,\r\n        payload:error.response.data.message\r\n\r\n\r\n    })\r\n   }\r\n}\r\n\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n\r\n\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/products`)\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_SUCCESS,\r\n            payload: data.products\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n} \r\n\r\n\r\n export const clearErrors=()=>async (dispatch)=>{\r\n     dispatch({\r\n         type:CLEAR_ERRORS\r\n     })\r\n }\r\n\r\n export const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/product/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update Product (ADMIN)\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/product/${id}`, productData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteReview = (id, productId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getProductReviews = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}","G:\\mern\\frontend\\shopit\\src\\components\\products\\Products.js",["230"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Products = ({product,col}) => {\r\n\r\n  const url='https://res.cloudinary.com/dg9gicndn/image/upload/v1611164897/products/tgpohrt5eq9g28i19ppa.jpg'\r\n\r\n  console.log(product.images[0]);\r\n\r\n    return (\r\n    \r\n             <div  className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n      <div className=\"card p-3 rounded\">\r\n        <img\r\n          className=\"card-img-top mx-auto\"\r\n          src={product.images[0].url?product.images[0].url:`${url}`}\r\n        />\r\n        <div className=\"card-body d-flex flex-column\">\r\n          <h5 className=\"card-title\">\r\n          <Link to={`/product/${product._id}`} >{product.name}</Link>\r\n          </h5>\r\n          <div className=\"ratings mt-auto\">\r\n            {/* <i className=\"fa fa-star\"></i>\r\n            <i className=\"fa fa-star\"></i>\r\n            <i className=\"fa fa-star\"></i>\r\n            <i className=\"fa fa-star-half-o\"></i>\r\n            <i className=\"fa fa-star-o\"></i> */}\r\n                            <div className=\"rating-outer\">\r\n                    <div className=\"rating-inner\"    style={{ width: `${ (product.ratings/5)*100 }%`}} ></div>\r\n\r\n \r\n                </div>\r\n            {/* <div className=\"ratings-outer\">\r\n              <div className=\"ratings-inner\" style={{ width: `${ (product.ratings/5)*100 }%`}}></div>\r\n            </div> */}\r\n            <span id=\"no_of_reviews\">({product.numofEeviews} Reviews)</span>\r\n          </div>\r\n          <p className=\"card-text\">${product.price}</p>\r\n          <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n            \r\n         )\r\n}\r\n\r\nexport default Products\r\n",["231","232"],"G:\\mern\\frontend\\shopit\\src\\components\\layouts\\Loader.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\products\\ProductDetails.js",["233"],"import React,{useEffect,useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { clearErrors, getProductDetails, newReview } from '../../actions/productActions'\r\n\r\nimport {useAlert} from 'react-alert'\r\nimport Loader from '../layouts/Loader'\r\nimport Metadata from '../layouts/Metadata'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport { addItemToCart } from '../../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\r\nimport ListReviews from '../review/ListReviews'\r\n\r\n\r\n\r\nconst ProductDetails = ({match}) => {\r\n\r\n\r\n    const [quantity,setQuantity]=useState(1)\r\n\r\n    const [rating,setRating]=useState(0)\r\n    const [comment,setComment]=useState('')\r\n\r\n\r\n    const dispatch=useDispatch()\r\n    const {loading,error,product}=useSelector(state=>state.productDetails)\r\n    const alert=useAlert()\r\n\r\n    const {user}=useSelector(state=>state.auth)\r\n\r\n    const {error:reviewError,success}=useSelector(state=>state.newReview)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getProductDetails(match.params.id))\r\n\r\n        if(error)\r\n        {\r\n            alert.error(error)\r\n            dispatch(clearErrors)\r\n        }\r\n        if(reviewError)\r\n        {\r\n            alert.error(reviewError)\r\n            dispatch(clearErrors)\r\n        }\r\n        if(success)\r\n        {\r\n            alert.success('Review posted Successfully')\r\n            dispatch({type:NEW_REVIEW_RESET})\r\n\r\n        }\r\n        \r\n    }, [dispatch,alert,match.params.id,reviewError,success])\r\n\r\n\r\n    const increaseQty=()=>{\r\n        const count=document.querySelector('.count')\r\n\r\n        if(count.valueAsNumber>=product.stock) return;\r\n\r\n    const qty=count.valueAsNumber+1      \r\n        setQuantity(qty)\r\n\r\n\r\n    }\r\n\r\n    const decreaseQty=()=>{\r\n        const count=document.querySelector('.count')\r\n\r\n        if(count.valueAsNumber<=1) return;\r\n\r\n    const qty=count.valueAsNumber-1      \r\n        setQuantity(qty)\r\n\r\n        \r\n    }\r\n\r\n    const addtoCart=()=>{\r\n        dispatch(addItemToCart(match.params.id,quantity))\r\n        alert.success('Item added to cart')\r\n    }\r\n\r\n    function setUserRating(){\r\n        const stars=document.querySelectorAll('.star')\r\n\r\n        stars.forEach((star,i)=>{\r\n            star.starValue=i+1;\r\n\r\n            ['click','mouseover','mouseout'].forEach(function(e){\r\n                star.addEventListener(e,showRatings)\r\n            })\r\n        })\r\n        function showRatings(e){\r\n            stars.forEach((star,i)=>{\r\n                if(e.type==='click'){\r\n                    if(i<this.starValue){\r\n                        star.classList.add('orange')\r\n\r\n                        setRating(this.starValue)\r\n                    }\r\n                    else{\r\n                        star.classList.remove('orange')\r\n                    }\r\n\r\n                }\r\n                if(e.type==='mouseover'){\r\n                    if(i<this.starValue){\r\n                        star.classList.add('yellow')\r\n                    }\r\n                    else{\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                    \r\n                }\r\n                if(e.type==='mouseout'){\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const reviewHandler=()=>{\r\n        const formData=new FormData()\r\n        formData.set('rating',rating)\r\n        formData.set('comment',comment)\r\n        formData.set('productId',match.params.id)\r\n\r\n        dispatch(newReview(formData))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        {loading ? <Loader/>:(\r\n\r\n\r\n            <>\r\n        <Metadata title={product.name}/>\r\n            <div>\r\n            <div className=\"row f-flex justify-content-around\">\r\n            <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n                {/* <img src=\"https://i5.walmartimages.com/asr/1223a935-2a61-480a-95a1-21904ff8986c_1.17fa3d7870e3d9b1248da7b1144787f5.jpeg?odnWidth=undefined&odnHeight=undefined&odnBg=ffffff\" alt=\"sdf\" height=\"500\" width=\"500\"/> */}\r\n                <Carousel pause=\"hover\">\r\n                    {product.images && product.images.map(image=>(\r\n                        <Carousel.Item key={image.public_id}>\r\n                            <img src={image.url} alt={product.title} className=\"d-block w-100\"/>\r\n                        </Carousel.Item>\r\n        ))}\r\n                </Carousel>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-lg-5 mt-5\">\r\n                <h3>{product.name}</h3>\r\n                <p id=\"product_id\">Product# {product._id}</p>\r\n\r\n                <hr/>\r\n\r\n                <div className=\"rating-outer\">\r\n                    <div className=\"rating-inner\"    style={{ width: `${ (product.ratings/5)*100 }%`}} ></div>\r\n\r\n \r\n                </div>\r\n                <span id=\"no_of_reviews\">({product.numofEeviews} Reviews)</span>\r\n\r\n                <hr/>\r\n\r\n                <p id=\"product_price\">${product.price}</p>\r\n                <div className=\"stockCounter d-inline\">\r\n                    <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\r\n\r\n                    <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\r\n\r\n                    <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\r\n                </div>\r\n                 <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock===0} onClick={addtoCart}>Add to Cart</button>\r\n\r\n                <hr/>\r\n\r\n                <p>Status: <span id=\"stock_status\" className={product.stock>0 ? 'greenColor' :'redColor'}>{product.stock >0 ? 'In Stock' :'Out Of Stock'}</span></p>\r\n\r\n                <hr/>\r\n\r\n                <h4 className=\"mt-2\">Description:</h4>\r\n                <p>{product.description}.</p>\r\n                <hr/>\r\n                <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\t\t\t\t\r\n\t\t\t\t{user ?<button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRating}>\r\n                            Submit Your Review\r\n                </button>:<div className=\"alert alert-danger mt-5\">Login In to Post your review</div>}\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"row mt-2 mb-5\">\r\n                    <div className=\"rating w-50\">\r\n\r\n                        <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                            <div className=\"modal-dialog\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                            <span aria-hidden=\"true\">&times;</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n\r\n                                        <ul className=\"stars\" >\r\n                                            <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                            <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                            <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                            <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                            <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                        </ul>\r\n\r\n                                        <textarea\r\n                                                        name=\"review\"\r\n                                                        id=\"review\" className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    >\r\n                                                        </textarea>\r\n\r\n                                        <button className=\"btn my-3 float-right review-btn px-4 text-white\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={reviewHandler}>Submit</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\t\t\t\t\t\t\r\n                </div>\r\n\r\n            \r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n\r\n    {product.reviews && product.reviews.length >0 && (\r\n       <ListReviews reviews={product.reviews} />\r\n    )}\r\n            \r\n            </>\r\n\r\n\r\n\r\n        )}\r\n        </>\r\n        \r\n            \r\n\r\n    )\r\n}\r\n\r\nexport default ProductDetails\r\n","G:\\mern\\frontend\\shopit\\src\\components\\layouts\\Search.js",[],"G:\\mern\\frontend\\shopit\\src\\reducers\\userReducers.js",[],"G:\\mern\\frontend\\shopit\\src\\constants\\userConstants.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\user\\login.js",["234","235","236"],"G:\\mern\\frontend\\shopit\\src\\components\\user\\Login.js",["237","238"],"import React,{useEffect,useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {useAlert} from 'react-alert'\r\nimport Loader from '../layouts/Loader'\r\nimport Metadata from '../layouts/Metadata'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { clearErrors, login } from '../../actions/userActions'\r\n\r\n\r\n\r\nconst Login = ({history,location}) => {\r\n\r\n    const alert=useAlert()\r\n\r\n    const dispatch=useDispatch()\r\n\r\n    const [email,setEmail]=useState('')\r\n    const [password,setPassword]=useState('')\r\n\r\n    const {isAuthenticated,error,loading}=useSelector(state=>state.auth)\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if(isAuthenticated){\r\n            history.push(redirect)\r\n        }\r\n\r\n        if(error)\r\n        {\r\n\r\n            alert.error(error)\r\n\r\n            dispatch(clearErrors)\r\n        }\r\n        \r\n    }, [dispatch,alert,isAuthenticated,error,history])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n\r\n        dispatch(login(email,password))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        {loading ? <Loader/>:(\r\n            <>\r\n            <Metadata title={'Login'}/>\r\n            <div className=\"row wrapper\"> \r\n\t\t<div className=\"col-10 col-lg-5\">\r\n        <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n            <h1 className=\"mb-3\">Login</h1>\r\n            <div className=\"form-group\">\r\n              <label for=\"email_field\">Email</label> \r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\"\r\n                value={email} onChange={(e)=>setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n  \r\n            <div className=\"form-group\">\r\n              <label for=\"password_field\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password_field\"\r\n                className=\"form-control\"\r\n                value={password} onChange={(e)=>setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n  \r\n            <button\r\n              id=\"login_button\"\r\n              type=\"submit\"\r\n              className=\"btn btn-block py-3\"\r\n            >\r\n              LOGIN\r\n            </button>\r\n\r\n            <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n          </form>\r\n\t\t  </div>\r\n    </div>\r\n\r\n            </>\r\n        )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","G:\\mern\\frontend\\shopit\\src\\actions\\userActions.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\user\\Register.js",["239","240","241"],"import React,{useEffect,useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {useAlert} from 'react-alert'\r\n\r\nimport Metadata from '../layouts/Metadata'\r\nimport { Carousel } from 'react-bootstrap'\r\nimport { clearErrors, register } from '../../actions/userActions'\r\nimport Loader from '../layouts/Loader'\r\n\r\n\r\n\r\n\r\n\r\nconst Register = ({history}) => {\r\n\r\n    const alert=useAlert()\r\n\r\n    const dispatch=useDispatch()\r\n\r\n\r\n\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { name, email, password } = user;\r\n\r\n    const [avatar,setAvatar]=useState()\r\n    const [avatarPreview, setAvatarPreview] = useState('path/images/default_avatar.jpg')\r\n\r\n    const {isAuthenticated,error,loading}=useSelector(state=>state.auth)\r\n\r\n    useEffect(() => {\r\n\r\n        if(isAuthenticated){\r\n            history.push('/')\r\n        }\r\n\r\n        if(error){\r\n            alert.error()\r\n            dispatch(clearErrors)\r\n        }\r\n        \r\n    }, [dispatch,alert,isAuthenticated,error,history])\r\n\r\n    \r\n    const onChange=e=>{\r\n        if(e.target.name==='avatar'){\r\n            const reader=new FileReader\r\n            reader.onload=()=>{\r\n                if(reader.readyState===2){\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n            reader.readAsDataURL(e.target.files[0])\r\n        }\r\n        else{\r\n\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n    \r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n\r\n        const formData=new FormData();\r\n        formData.set('name',name);\r\n        formData.set('email',email);\r\n        formData.set('password',password);\r\n        formData.set('avatar',avatar);\r\n\r\n        dispatch(register(formData))\r\n    }\r\n\r\n    return (\r\n\r\n            <>\r\n            <Metadata title={'Register User'}/>\r\n             <div className=\"row wrapper\">\r\n\t\t<div className=\"col-10 col-lg-5\">\r\n        <form className=\"shadow-lg\" encType='multipart/form-data' onSubmit={submitHandler}>\r\n            <h1 className=\"mb-3\">Register</h1>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email_field\">Name</label>\r\n            <input type=\"name\" id=\"name_field\" className=\"form-control\" name='name' value={name} onChange={onChange} />\r\n          </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email_field\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email_field\"\r\n                className=\"form-control\" name='email'\r\n                value={email} onChange={onChange}\r\n              />\r\n            </div>\r\n  \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password_field\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"password_field\"\r\n                className=\"form-control\" name='password'\r\n                value={password} onChange={onChange}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label htmlFor='avatar_upload'>Avatar</label>\r\n              <div className='d-flex align-items-center'>\r\n                  <div>\r\n                      <figure className='avatar mr-3 item-rtl'>\r\n                          <img\r\n                              src={avatarPreview}\r\n                              className='rounded-circle'\r\n                              alt='Avatar Preview'\r\n                          />\r\n                      </figure>\r\n                  </div>\r\n                  <div className='custom-file'>\r\n                      <input\r\n                          type='file'\r\n                          name='avatar'\r\n                          className='custom-file-input'\r\n                          id='customFile' accept=\"images/*\" onChange={onChange}\r\n                      />\r\n                      <label className='custom-file-label' htmlFor='customFile'>\r\n                          Choose Avatar\r\n                      </label>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n  \r\n            <button\r\n              id=\"register_button\"\r\n              type=\"submit\"\r\n              className=\"btn btn-block py-3\" disabled={loading ? true:false}\r\n            >\r\n              REGISTER\r\n            </button>\r\n          </form>\r\n\t\t  </div>\r\n    </div>\r\n            </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Register\r\n","G:\\mern\\frontend\\shopit\\src\\components\\user\\Profile.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\route\\ProtectedRoute.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\user\\UpdateProfile.js",["242"],"import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport Metadata from '../layouts/Metadata'\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile","G:\\mern\\frontend\\shopit\\src\\components\\user\\UpdatePassword.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\user\\ForgotPassword.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\user\\NewPassword.js",[],"G:\\mern\\frontend\\shopit\\src\\reducers\\cartReducers.js",[],"G:\\mern\\frontend\\shopit\\src\\constants\\cartConstants.js",[],"G:\\mern\\frontend\\shopit\\src\\actions\\cartActions.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\cart\\Cart.js",["243","244","245","246"],"import React,{Fragment, useEffect,useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport {useAlert} from 'react-alert'\r\nimport Loader from '../layouts/Loader'\r\nimport Metadata from '../layouts/Metadata'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.product}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart","G:\\mern\\frontend\\shopit\\src\\components\\cart\\Shipping.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\cart\\CheckoutSteps.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\cart\\ConfirmOrder.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\cart\\Payment.js",[],"G:\\mern\\frontend\\shopit\\src\\reducers\\orderReducers.js",[],"G:\\mern\\frontend\\shopit\\src\\constants\\orderConstants.js",[],"G:\\mern\\frontend\\shopit\\src\\actions\\orderActions.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\cart\\OrderSuccess.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\order\\ListOrders.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\order\\OrderDetails.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\review\\ListReviews.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\admin\\Dashboard.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\admin\\Sidebar.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\admin\\ProductsList.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\admin\\NewProduct.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\admin\\UpdateProduct.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\admin\\OrderList.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\admin\\ProcessOrder.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\admin\\UserList.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\admin\\UpdateUser.js",[],"G:\\mern\\frontend\\shopit\\src\\components\\admin\\ProductReviews.js",["247"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\n\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\r\nimport Loader from '../layouts/Loader'\r\nimport Metadata from '../layouts/Metadata'\r\n\r\nconst ProductReviews = () => {\r\n\r\n    const [productId, setProductId] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, reviews } = useSelector(state => state.productReviews);\r\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (productId !== '') {\r\n            dispatch(getProductReviews(productId))\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Review deleted successfully');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, productId))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getProductReviews(productId))\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n                actions:\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Metadata title={'Product Reviews'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"productId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={productId}\r\n                                            onChange={(e) => setProductId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n\t\t\t\t\t\t\t\t    </button>\r\n                                </ form>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\r\n                            )}\r\n\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductReviews",{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":20,"column":8,"nodeType":"254","messageId":"255","endLine":20,"endColumn":21},{"ruleId":"252","severity":1,"message":"256","line":48,"column":10,"nodeType":"254","messageId":"255","endLine":48,"endColumn":14},{"ruleId":"252","severity":1,"message":"257","line":48,"column":15,"nodeType":"254","messageId":"255","endLine":48,"endColumn":22},{"ruleId":"252","severity":1,"message":"258","line":48,"column":23,"nodeType":"254","messageId":"255","endLine":48,"endColumn":38},{"ruleId":"259","severity":1,"message":"260","line":65,"column":5,"nodeType":"261","endLine":65,"endColumn":7,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":26,"column":34,"nodeType":"265","endLine":26,"endColumn":72},{"ruleId":"252","severity":1,"message":"266","line":1,"column":44,"nodeType":"254","messageId":"255","endLine":1,"endColumn":51},{"ruleId":"252","severity":1,"message":"267","line":3,"column":10,"nodeType":"254","messageId":"255","endLine":3,"endColumn":15},{"ruleId":"252","severity":1,"message":"268","line":32,"column":5,"nodeType":"254","messageId":"255","endLine":32,"endColumn":24},{"ruleId":"263","severity":1,"message":"264","line":16,"column":9,"nodeType":"265","endLine":19,"endColumn":11},{"ruleId":"248","replacedBy":"269"},{"ruleId":"250","replacedBy":"270"},{"ruleId":"259","severity":1,"message":"271","line":53,"column":8,"nodeType":"261","endLine":53,"endColumn":60,"suggestions":"272"},{"ruleId":"252","severity":1,"message":"273","line":7,"column":10,"nodeType":"254","messageId":"255","endLine":7,"endColumn":18},{"ruleId":"274","severity":2,"message":"275","line":18,"column":28,"nodeType":"254","messageId":"276","endLine":18,"endColumn":36},{"ruleId":"274","severity":2,"message":"277","line":19,"column":34,"nodeType":"254","messageId":"276","endLine":19,"endColumn":41},{"ruleId":"252","severity":1,"message":"273","line":7,"column":10,"nodeType":"254","messageId":"255","endLine":7,"endColumn":18},{"ruleId":"259","severity":1,"message":"278","line":39,"column":8,"nodeType":"261","endLine":39,"endColumn":54,"suggestions":"279"},{"ruleId":"252","severity":1,"message":"273","line":7,"column":10,"nodeType":"254","messageId":"255","endLine":7,"endColumn":18},{"ruleId":"252","severity":1,"message":"280","line":9,"column":8,"nodeType":"254","messageId":"255","endLine":9,"endColumn":14},{"ruleId":"281","severity":1,"message":"282","line":53,"column":26,"nodeType":"283","messageId":"284","endLine":53,"endColumn":40,"fix":"285"},{"ruleId":"259","severity":1,"message":"286","line":46,"column":8,"nodeType":"261","endLine":46,"endColumn":52,"suggestions":"287"},{"ruleId":"252","severity":1,"message":"288","line":1,"column":25,"nodeType":"254","messageId":"255","endLine":1,"endColumn":34},{"ruleId":"252","severity":1,"message":"289","line":1,"column":35,"nodeType":"254","messageId":"255","endLine":1,"endColumn":43},{"ruleId":"252","severity":1,"message":"290","line":4,"column":9,"nodeType":"254","messageId":"255","endLine":4,"endColumn":17},{"ruleId":"252","severity":1,"message":"280","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":14},{"ruleId":"252","severity":1,"message":"280","line":11,"column":8,"nodeType":"254","messageId":"255","endLine":11,"endColumn":14},"no-native-reassign",["291"],"no-negated-in-lhs",["292"],"no-unused-vars","'CheckoutSteps' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'loading' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stripeApiKey'. Either include it or remove the dependency array.","ArrayExpression",["293"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'compose' is defined but never used.","'types' is defined but never used.","'DELETE_REVIEW_RESET' is defined but never used.",["291"],["292"],"React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.",["294"],"'Carousel' is defined but never used.","no-undef","'useState' is not defined.","undef","'useSate' is not defined.","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["295"],"'Loader' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"296","text":"297"},"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["298"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useAlert' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},[1197,1197],"()",{"desc":"305","fix":"306"},"Update the dependencies array to be: [stripeApiKey]",{"range":"307","text":"308"},"Update the dependencies array to be: [dispatch, alert, match.params.id, reviewError, success, error]",{"range":"309","text":"310"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"311","text":"312"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"313","text":"314"},[2410,2412],"[stripeApiKey]",[1470,1522],"[dispatch, alert, match.params.id, reviewError, success, error]",[967,1013],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1364,1408],"[dispatch, alert, error, history, isUpdated, user]"]